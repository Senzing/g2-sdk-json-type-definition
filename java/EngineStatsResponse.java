// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.schema;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

/**
 * No description.
 */
@JsonSerialize
public class EngineStatsResponse {
    @JsonProperty("MISSING_RES_ENT")
    private Integer missingResEnt;

    @JsonProperty("MISSING_RES_ENT_AND_OKEY")
    private Integer missingResEntAndOkey;

    @JsonProperty("abortedUnresolve")
    private Integer abortedUnresolve;

    @JsonProperty("actualAmbiguousTest")
    private Integer actualAmbiguousTest;

    @JsonProperty("addedRecords")
    private Integer addedRecords;

    @JsonProperty("cacheHit")
    private AttributeCounters cacheHit;

    @JsonProperty("candidateBuilders")
    private AttributeCounters candidateBuilders;

    @JsonProperty("candidates")
    private Integer candidates;

    @JsonProperty("deletedRecords")
    private Integer deletedRecords;

    @JsonProperty("duration")
    private EngineStatsResponseDuration duration;

    @JsonProperty("filteredObsFeat")
    private Integer filteredObsFeat;

    @JsonProperty("genericDetect")
    private AttributeCounters genericDetect;

    @JsonProperty("latchContention")
    private AttributeCounters latchContention;

    @JsonProperty("loadedRecords")
    private Integer loadedRecords;

    @JsonProperty("redoTriggers")
    private AttributeCounters redoTriggers;

    @JsonProperty("reducedScoredFeatureType")
    private AttributeCounters reducedScoredFeatureType;

    @JsonProperty("reevaluations")
    private Integer reevaluations;

    @JsonProperty("repairedEntities")
    private Integer repairedEntities;

    @JsonProperty("reresolveSkipped")
    private Integer reresolveSkipped;

    @JsonProperty("reresolveTriggers")
    private EngineStatsResponseReresolveTriggers reresolveTriggers;

    @JsonProperty("retries")
    private Integer retries;

    @JsonProperty("scoredPairs")
    private AttributeCounters scoredPairs;

    @JsonProperty("suppressedCandidateBuilders")
    private AttributeCounters suppressedCandidateBuilders;

    @JsonProperty("suppressedScoredFeatureType")
    private AttributeCounters suppressedScoredFeatureType;

    @JsonProperty("unresolveTest")
    private Integer unresolveTest;

    @JsonProperty("unresolveTriggers")
    private EngineStatsResponseUnresolveTriggers unresolveTriggers;

    @JsonProperty("workload")
    private EngineStatsResponseWorkload workload;

    public EngineStatsResponse() {
    }

    /**
     * Getter for missingResEnt.<p>
     * No description.
     */
    public Integer getMissingResEnt() {
        return missingResEnt;
    }

    /**
     * Setter for missingResEnt.<p>
     * No description.
     */
    public void setMissingResEnt(Integer missingResEnt) {
        this.missingResEnt = missingResEnt;
    }

    /**
     * Getter for missingResEntAndOkey.<p>
     * No description.
     */
    public Integer getMissingResEntAndOkey() {
        return missingResEntAndOkey;
    }

    /**
     * Setter for missingResEntAndOkey.<p>
     * No description.
     */
    public void setMissingResEntAndOkey(Integer missingResEntAndOkey) {
        this.missingResEntAndOkey = missingResEntAndOkey;
    }

    /**
     * Getter for abortedUnresolve.<p>
     * No description.
     */
    public Integer getAbortedUnresolve() {
        return abortedUnresolve;
    }

    /**
     * Setter for abortedUnresolve.<p>
     * No description.
     */
    public void setAbortedUnresolve(Integer abortedUnresolve) {
        this.abortedUnresolve = abortedUnresolve;
    }

    /**
     * Getter for actualAmbiguousTest.<p>
     * No description.
     */
    public Integer getActualAmbiguousTest() {
        return actualAmbiguousTest;
    }

    /**
     * Setter for actualAmbiguousTest.<p>
     * No description.
     */
    public void setActualAmbiguousTest(Integer actualAmbiguousTest) {
        this.actualAmbiguousTest = actualAmbiguousTest;
    }

    /**
     * Getter for addedRecords.<p>
     * No description.
     */
    public Integer getAddedRecords() {
        return addedRecords;
    }

    /**
     * Setter for addedRecords.<p>
     * No description.
     */
    public void setAddedRecords(Integer addedRecords) {
        this.addedRecords = addedRecords;
    }

    /**
     * Getter for cacheHit.<p>
     * No description.
     */
    public AttributeCounters getCacheHit() {
        return cacheHit;
    }

    /**
     * Setter for cacheHit.<p>
     * No description.
     */
    public void setCacheHit(AttributeCounters cacheHit) {
        this.cacheHit = cacheHit;
    }

    /**
     * Getter for candidateBuilders.<p>
     * No description.
     */
    public AttributeCounters getCandidateBuilders() {
        return candidateBuilders;
    }

    /**
     * Setter for candidateBuilders.<p>
     * No description.
     */
    public void setCandidateBuilders(AttributeCounters candidateBuilders) {
        this.candidateBuilders = candidateBuilders;
    }

    /**
     * Getter for candidates.<p>
     * No description.
     */
    public Integer getCandidates() {
        return candidates;
    }

    /**
     * Setter for candidates.<p>
     * No description.
     */
    public void setCandidates(Integer candidates) {
        this.candidates = candidates;
    }

    /**
     * Getter for deletedRecords.<p>
     * No description.
     */
    public Integer getDeletedRecords() {
        return deletedRecords;
    }

    /**
     * Setter for deletedRecords.<p>
     * No description.
     */
    public void setDeletedRecords(Integer deletedRecords) {
        this.deletedRecords = deletedRecords;
    }

    /**
     * Getter for duration.<p>
     * No description.
     */
    public EngineStatsResponseDuration getDuration() {
        return duration;
    }

    /**
     * Setter for duration.<p>
     * No description.
     */
    public void setDuration(EngineStatsResponseDuration duration) {
        this.duration = duration;
    }

    /**
     * Getter for filteredObsFeat.<p>
     * No description.
     */
    public Integer getFilteredObsFeat() {
        return filteredObsFeat;
    }

    /**
     * Setter for filteredObsFeat.<p>
     * No description.
     */
    public void setFilteredObsFeat(Integer filteredObsFeat) {
        this.filteredObsFeat = filteredObsFeat;
    }

    /**
     * Getter for genericDetect.<p>
     * No description.
     */
    public AttributeCounters getGenericDetect() {
        return genericDetect;
    }

    /**
     * Setter for genericDetect.<p>
     * No description.
     */
    public void setGenericDetect(AttributeCounters genericDetect) {
        this.genericDetect = genericDetect;
    }

    /**
     * Getter for latchContention.<p>
     * No description.
     */
    public AttributeCounters getLatchContention() {
        return latchContention;
    }

    /**
     * Setter for latchContention.<p>
     * No description.
     */
    public void setLatchContention(AttributeCounters latchContention) {
        this.latchContention = latchContention;
    }

    /**
     * Getter for loadedRecords.<p>
     * No description.
     */
    public Integer getLoadedRecords() {
        return loadedRecords;
    }

    /**
     * Setter for loadedRecords.<p>
     * No description.
     */
    public void setLoadedRecords(Integer loadedRecords) {
        this.loadedRecords = loadedRecords;
    }

    /**
     * Getter for redoTriggers.<p>
     * No description.
     */
    public AttributeCounters getRedoTriggers() {
        return redoTriggers;
    }

    /**
     * Setter for redoTriggers.<p>
     * No description.
     */
    public void setRedoTriggers(AttributeCounters redoTriggers) {
        this.redoTriggers = redoTriggers;
    }

    /**
     * Getter for reducedScoredFeatureType.<p>
     * No description.
     */
    public AttributeCounters getReducedScoredFeatureType() {
        return reducedScoredFeatureType;
    }

    /**
     * Setter for reducedScoredFeatureType.<p>
     * No description.
     */
    public void setReducedScoredFeatureType(AttributeCounters reducedScoredFeatureType) {
        this.reducedScoredFeatureType = reducedScoredFeatureType;
    }

    /**
     * Getter for reevaluations.<p>
     * No description.
     */
    public Integer getReevaluations() {
        return reevaluations;
    }

    /**
     * Setter for reevaluations.<p>
     * No description.
     */
    public void setReevaluations(Integer reevaluations) {
        this.reevaluations = reevaluations;
    }

    /**
     * Getter for repairedEntities.<p>
     * No description.
     */
    public Integer getRepairedEntities() {
        return repairedEntities;
    }

    /**
     * Setter for repairedEntities.<p>
     * No description.
     */
    public void setRepairedEntities(Integer repairedEntities) {
        this.repairedEntities = repairedEntities;
    }

    /**
     * Getter for reresolveSkipped.<p>
     * No description.
     */
    public Integer getReresolveSkipped() {
        return reresolveSkipped;
    }

    /**
     * Setter for reresolveSkipped.<p>
     * No description.
     */
    public void setReresolveSkipped(Integer reresolveSkipped) {
        this.reresolveSkipped = reresolveSkipped;
    }

    /**
     * Getter for reresolveTriggers.<p>
     * No description.
     */
    public EngineStatsResponseReresolveTriggers getReresolveTriggers() {
        return reresolveTriggers;
    }

    /**
     * Setter for reresolveTriggers.<p>
     * No description.
     */
    public void setReresolveTriggers(EngineStatsResponseReresolveTriggers reresolveTriggers) {
        this.reresolveTriggers = reresolveTriggers;
    }

    /**
     * Getter for retries.<p>
     * No description.
     */
    public Integer getRetries() {
        return retries;
    }

    /**
     * Setter for retries.<p>
     * No description.
     */
    public void setRetries(Integer retries) {
        this.retries = retries;
    }

    /**
     * Getter for scoredPairs.<p>
     * No description.
     */
    public AttributeCounters getScoredPairs() {
        return scoredPairs;
    }

    /**
     * Setter for scoredPairs.<p>
     * No description.
     */
    public void setScoredPairs(AttributeCounters scoredPairs) {
        this.scoredPairs = scoredPairs;
    }

    /**
     * Getter for suppressedCandidateBuilders.<p>
     * No description.
     */
    public AttributeCounters getSuppressedCandidateBuilders() {
        return suppressedCandidateBuilders;
    }

    /**
     * Setter for suppressedCandidateBuilders.<p>
     * No description.
     */
    public void setSuppressedCandidateBuilders(AttributeCounters suppressedCandidateBuilders) {
        this.suppressedCandidateBuilders = suppressedCandidateBuilders;
    }

    /**
     * Getter for suppressedScoredFeatureType.<p>
     * No description.
     */
    public AttributeCounters getSuppressedScoredFeatureType() {
        return suppressedScoredFeatureType;
    }

    /**
     * Setter for suppressedScoredFeatureType.<p>
     * No description.
     */
    public void setSuppressedScoredFeatureType(AttributeCounters suppressedScoredFeatureType) {
        this.suppressedScoredFeatureType = suppressedScoredFeatureType;
    }

    /**
     * Getter for unresolveTest.<p>
     * No description.
     */
    public Integer getUnresolveTest() {
        return unresolveTest;
    }

    /**
     * Setter for unresolveTest.<p>
     * No description.
     */
    public void setUnresolveTest(Integer unresolveTest) {
        this.unresolveTest = unresolveTest;
    }

    /**
     * Getter for unresolveTriggers.<p>
     * No description.
     */
    public EngineStatsResponseUnresolveTriggers getUnresolveTriggers() {
        return unresolveTriggers;
    }

    /**
     * Setter for unresolveTriggers.<p>
     * No description.
     */
    public void setUnresolveTriggers(EngineStatsResponseUnresolveTriggers unresolveTriggers) {
        this.unresolveTriggers = unresolveTriggers;
    }

    /**
     * Getter for workload.<p>
     * No description.
     */
    public EngineStatsResponseWorkload getWorkload() {
        return workload;
    }

    /**
     * Setter for workload.<p>
     * No description.
     */
    public void setWorkload(EngineStatsResponseWorkload workload) {
        this.workload = workload;
    }
}
